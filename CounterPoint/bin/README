About me:

I am primarily for musical and/or software nerds. Everyone else is entering a world of pain. 

I am an experimental algorithm that generates musical melodies as usable MIDI files. Please focus on my class 
structure and what I can accomplish. 

Traditional Fuxian Counterpoint has a very discrete set of melodic rules and is the perfect pilot to
build the framework around. It has the quintessential Baroque classical music sound and is presently my only 
functional melodic rule system. 



Usage:

I have no front end yet so one must run the DRIVER from an IDE (like eclipse), at whence the folder Counterpoint\MidiFiles will 
populate with playable midi file(s). Play the midi files with your computer's default midi. Note that you can set the gregorian 
Mode in the driver. 

Each MIDI file will have many variations of melodies based upon a single Cantus Firmus (primary melody). It will sound 
repetitive because of my recursive algorithm, but each bar is slightly different. 

Windows: Should be able to play a MIDI file. 
Mac: May have to open garageband and drag the MIDI file to a MIDI track to hear it (itunes apparently cannot handle it)




Vernacular:

Cantus Firmus: Single note melody line following particular fuxian counterpoint rules

First Species: The First added melody to a Cantus Firmus, thus, it is technically the second melody, and also follows fuxian 
counterpoint

Zenith: the highest note of the melody, which can only occur once, and abolishes the need of a Nadir

Nadir: The lowest note of the melody, which can only occur once, and abolishes the need for a Zenith

